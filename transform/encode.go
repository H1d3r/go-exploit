package transform

import (
	"encoding/base64"
	"encoding/binary"

	"github.com/vulncheck-oss/go-exploit/output"
	"golang.org/x/text/cases"
	"golang.org/x/text/language"
)

func EncodeBase64(s string) string {
	return base64.StdEncoding.EncodeToString([]byte(s))
}

func DecodeBase64(s string) string {
	decoded, err := base64.StdEncoding.DecodeString(s)
	if err != nil {
		output.PrintError(err)

		return ""
	}

	return string(decoded)
}

func Title(s string) string {
	return cases.Title(language.Und, cases.NoLower).String(s)
}

// PackLittleInt32 packs a little-endian 32-bit integer as a string.
func PackLittleInt32(n int) string {
	bs := make([]byte, 4)

	binary.LittleEndian.PutUint32(bs, uint32(n))

	return string(bs)
}

// PackLittleInt64 packs a little-endian 64-bit integer as a string.
func PackLittleInt64(n int) string {
	bs := make([]byte, 8)

	binary.LittleEndian.PutUint64(bs, uint64(n))

	return string(bs)
}
